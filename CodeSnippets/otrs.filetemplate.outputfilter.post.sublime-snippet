<snippet>
    <content><![CDATA[
# --
# Kernel/Output/HTML/OutputFilterPost${1:Znuny4OTRS}.pm - $2
# Copyright (C) 2014 Znuny GmbH, http://znuny.com/
# --

package Kernel::Output::HTML::OutputFilterPost${1:Znuny4OTRS};

use strict;
use warnings;

sub new {
    my ( \$Type, %Param ) = @_;

    # allocate new hash for object
    my \$Self = {};
    bless( \$Self, \$Type );

    # check needed objects
    # additional LayoutObject \$Self params are present, see LayoutObject for more information
    NEEDED:
    for my \$Needed (qw( ConfigObject LogObject TimeObject MainObject EncodeObject ParamObject LayoutObject HTMLUtilsObject JSONObject UserLanguage )) {
        \$Self->{\$Needed} = \$Param{\$Needed} || die "Got no \$Needed!";
    }

    \$Self->{Action} = $Param{Action} || '';

    return \$Self;
}

sub Run {
    my ( \$Self, %Param ) = @_;

    # check Action param
    return 1 if \$Self->{Action} ne '';
    return 1 if !scalar grep { \$Self->{Action} eq \$_ } qw();

    # check TemplateFile
    return 1 if !\$Param{TemplateFile};
    return 1 if \$Param{TemplateFile} ne '';
    return 1 if !scalar grep { \$Param{TemplateFile} eq \$_ } qw();

    # check regular parameter
    return 1 if !\$Self->{ParamObject}->GetParam( Param => '' );


    # manipulate HTML content
    \${ \$Param{Data} } =~ s{}{}xms;

    return 1;
}

1;

]]></content>
    <tabTrigger>otrs.filetemplate.outputfilter.post</tabTrigger>
</snippet>
